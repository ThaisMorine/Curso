#!/bin/bash
#
# Copyright 2020 Red Hat, Inc.
#
# NAME
#     lab-schedule-pods - lab script for DO280-OCP4
#
# SYNOPSIS
#     lab-schedule-pods {start|finish}
#
#        start  - prepare the system for starting the lab
#        finish - perform post-lab finish
#
# DESCRIPTION
#     This script, based on singular argument, either does start or finish for
#     the [name of the exercise]
#
# CHANGELOG
#   * Thu Sep 17 2020 Micahel Phillips <miphilli@redhat.com>
#   - Added steps to lab_finish to cleanup project template resources.
#   * Thu Aug 20 2020 Michael Phillips <miphilli@redhat.com>
#   - added the ocp4_login_as_admin function to the lab_start function
#   * Thu Dec 05 2019 Michael Phillips <miphilli@redhat.com>
#   - Change the function ocp4_add_self_provisioning to use the function name with a typo: ocp4_add_self_provisioing
#   * Wed Nov 27 2019 Michael Phillips <miphilli@redhat.com>
#   - Added lines for functions ocp4_add_self_provisioning and ocp4_cleanup_lab_files
#   * Thu Oct 31 2019 Michael Phillips <miphilli@redhat.com>
#   - initial creation


PATH=/usr/bin:/bin:/usr/sbin:/sbin:/root/bin:/usr/local/bin
declare -a valid_commands=(start finish)

# Change these variables to match your exercise
this='schedule-limit'
title='Guided Exercise: Limiting Resource Usage by an Application'

# Do not change these variables
target='workstation'
run_as_root='true'


function lab_start {

  ocp4_print_prereq_header

  ocp4_is_cluster_up
  ocp4_login_as_admin
  print_line
  ocp4_fail_if_project_exists "${this}"
  ocp4_fail_if_project_exists "template-test"
  ocp4_exit_on_failure "It looks like you have already started this exercise. To try this exercise again, run 'lab ${this} finish' followed by 'lab ${this} start'."

  ocp4_print_setup_header


  ocp4_add_standard_users
  ocp4_add_self_provisioing

  print_line
  print_line " Preparing the student's cluster:"
  ocp4_grab_lab_files

  ocp4_print_setup_footer
}


function lab_finish {

  ocp4_print_cleanup_header

  ocp4_login_as_admin
  # Remove project templates
  for TEMPLATE in $(oc get templates.template.openshift.io -n openshift-config -o name)
  do
    pad2 "Removing project template '${TEMPLATE}'"
    if oc delete ${TEMPLATE} -n openshift-config
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  done

  # Revert the cluster to using the default project template
  local CURRENT_TEMPLATE="$(oc get projects.config.openshift.io/cluster -o jsonpath='{.spec.projectRequestTemplate.name}')"
  if [ -n "${CURRENT_TEMPLATE}" ]
  then
    pad2 "Reverting the cluster to use the default project template"
    if oc patch projects.config.openshift.io/cluster --type merge --patch '{"spec":{"projectRequestTemplate":null}}'
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  fi

  # Remove temporary file
  if [ -f /tmp/project-template.yaml ]
  then
    pad2 "Removing /tmp/project-template.yaml"
    if rm -f /tmp/project-template.yaml
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  fi

  ocp4_delete_project "${this}"
  ocp4_delete_project "template-test"
  ocp4_cleanup_lab_files

  ocp4_print_cleanup_footer
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/labtool.do280.shlib

grading_main_program "$@"
